On Relaxing Determinism in Arithmetic Circuits

Arthur Choi   Adnan Darwiche  

Abstract

The past decade has seen   signi cant interest in learning tractable probabilistic representations  Arithmetic circuits  ACs  were among
the  rst proposed tractable representations  with
some subsequent representations being instances
of ACs with weaker or stronger properties 
In
this paper  we provide   formal basis under which
variants on ACs can be compared  and where the
precise roles and semantics of their various properties can be made more transparent  This allows
us to place some recent developments on ACs in
  clearer perspective and to also derive new results for ACs  This includes an exponential separation between ACs with and without determinism  completeness and incompleteness results 
and tractability results  or lack thereof  when
computing most probable explanations  MPEs 

  Introduction
Arithmetic circuits  ACs  were introduced into the AI literature more than  fteen years ago as   tractable representation of probability distributions  The original work
on these circuits proposed the compilation of such circuits
from Bayesian networks  while identifying and assuming
three circuit properties  called determinism  decomposability and smoothness  Darwiche          Since then 
the literature on using arithmetic circuits for probabilistic
reasoning has seen two key developments  The  rst is the
proposal made by  Lowd   Domingos    to learn these
circuits directly from data instead of just compiling them
from models therefore creating two distinct construction
modes for these circuits  The second development  reported by  Poon   Domingos    amounted to proposing   class of arithmetic circuits that does not satisfy determinism  under the name of sumproduct networks  SPNs 

 University of California  Los Angeles  California  USA  Correspondence to  Arthur Choi  aychoi cs ucla edu  Adnan
Darwiche  darwiche cs ucla edu 

Proceedings of the   th International Conference on Machine
Learning  Sydney  Australia  PMLR     Copyright  
by the author   

An examination of the literature surrounding arithmetic circuits and their variants suggests that the implications of
relaxing determinism are not very well understood  even
leading to con icting claims in some cases  The treatment
of smoothness has also not been very consistent as far as its
necessity for certain operations on arithmetic circuits  and
the complexity of enforcing it  Our goal in this paper is to
address some of these issues by providing   systematic and
formal treatment of arithmetic circuits  while focusing on
the precise roles and semantics of their various properties
and the implications of relaxing determinism 
We make several contributions in this paper  We start by
reconstructing the original de nition of arithmetic circuits
given in  Darwiche      while assuming that these
circuits represent arbitrary factors  instead of just distributions induced by Bayesian networks    particular class of
factors  We then provide de nitions for decomposability 
smoothness and determinism in the context of this reconstruction  while isolating precisely the role that each one
of these properties play  Some of what we report on this
has already been observed in the literature  but we provide
alternate or more formal proofs for the sake of   systematic and inclusive treatment  We also derive new results 
The  rst of these is   separation theorem showing that relaxing determinism can lead to exponentially smaller arithmetic circuits  while preserving the ability of these circuits
to compute marginals in linear time  This begs the question of whether anything is lost from relaxing determinism 
On this front  we highlight    nding that has already been
reported in the literature and introduce new ones  In particular  we provide an expanded proof for the observation
that relaxing determinism deprives arithmetic circuits from
the ability to compute MPE in linear time  We also add
  new result showing that enforcing decomposability has
the power of solving MPE  even though the MPE query
is not tractable for decomposable circuits  Moreover  we
show that relaxing determinism leads to   type of incompleteness that we call parametric incompleteness  with important implications on the compilability of circuits from
models  Our  nal contribution is   formal correctness proof
of the lineartime MPE algorithm  originally proposed by
 Chan   Darwiche    but with respect to the reconstructed de nition of arithmetic circuits satisfying decomposability  determinism and smoothness 

On Relaxing Determinism in Arithmetic Circuits

This paper is structured as follows  We reconstruct the definition of arithmetic circuits as given by  Darwiche   
  in Section   but with respect to factors instead of distributions  of Bayesian networks  We then provide   new
treatment of decomposability and smoothness in Section  
followed by   new treatment of determinism in Section  
We  nally focus on the relaxation of determinism in Section   where we provide   new set of results and insights 
An extended version of this paper includes some proofs that
have been omitted here for space limitations 

  Arithmetic Circuits
Capital letters     denote variables and lowercase letters
    denote their values  Bold capital letters     denote sets
of variables and bold lowercase letters     denote their instantiations  Value   is compatible with instantiation   iff
  assigns value   to   or does not assign any value to   

De nition     factor       over variables   maps each
instantiation   of variables   into   nonnegative number

      The factor is   distribution when cid 

           

The classical  tabular representation of   factor       is
clearly exponential in the number of variables    yet it
allows one to answer key probabilistic queries ef ciently 
The interest here is in   more compact representation of
these factors  using arithmetic circuits  while preserving the
ability to answer some of these queries ef ciently  We focus on the following queries  all with respect to   factor
      with its variables   partitioned into sets   and   

de ned as        cid 

  Computing the value of factor       at instantiation   
           and called   marginal
in this paper  This corresponds to the probability of
evidence   when the factor is   distribution 

  Computing the MPE of factor       de ned as
argmaxx       This corresponds to the most likely
instantiation when the factor is   distribution 

  Computing the MAP over variables    de ned as
           This is the most likely state of

argmaxy
variables   when the factor is   distribution 

 cid 

For Bayesian networks  interpreted as factors  the decision variants of the MPE  marginals  and MAP problems are  respectively  NPcomplete  Shimony    PPcomplete  Roth    and NPPPcomplete  Park   Darwiche    see also  Darwiche    Hence  computing marginals is more dif cult than computing MPE an
observation that will be quite relevant later 

 Available at http reasoning cs ucla edu 

    
 
 
 
 
        

      
 
 
 
 
 
 
 
 
           

 
 
 
 

 
   
 
 
 
 
 
 
 
 
 
 
 
 
            

Figure   Two factors and their product 

variables   as the factor      with         cid 
This projection will be denoted by cid 

We also need to de ne the projection of factor       on
          

       

We next de ne an arithmetic circuit over discrete variables
   as utilized in  Darwiche      to represent distributions  except that we will utilize it to represent factors   
key observation here is that the circuit inputs are not variables    but indicator variables that are derived from the
values of variables    Darwiche     
De nition   An arithmetic circuit AC    over variables
  is   rooted DAG whose internal nodes are labeled with
  or   and whose leaf nodes are labeled with either indicator variables    or nonnegative parameters   Here   
is the value of some variable   in    The value of the circuit at instantiation    where        is denoted AC   
and obtained by assigning indicators    the value   if   is
compatible with instantiation   and   otherwise  then evaluating the circuit in the standard way  in linear time 

The following de nition makes   distinction that has not
been made explicit in the literature as far as we know  but
is critical for   clear semantics of arithmetic circuits 
De nition   The circuit AC    computes factor       iff
AC            for each instantiation   of variables   
The circuit computes the factor marginals iff AC     
      for each instantiation   of every       
The notion of  computes   factor  constrains the value of
an arithmetic circuit under   strict subset of its inputs      
those corresponding to complete instantiations  However 
the notion of  computes marginals  constrains its value under every input  Hence  two arithmetic circuits that represent distinct functions  over indicator variables  may still
compute the same factor  Consider an arithmetic circuit
that computes   factor             where   has values  
and     Replacing         with   in this circuit preserves
its ability to compute the factor since           for every
input that is relevant to computing the factor  This replacement  however  will change the function represented by the
circuit and its ability to compute the factor marginals 

Corollary   An arithmetic circuit
that computes the
marginals of   factor also computes the factor  However 

On Relaxing Determinism in Arithmetic Circuits

an arithmetic circuit that computes   factor does not necessarily compute its marginals 

Consider the following arithmetic circuit which computes
the factor in Figure    

                                 

This circuit does not compute the factor marginals  Moreover  this circuit is the product of two circuits  one computing factor    the other computing factor    as in Figure  
To get further insights into the notion of  computing
marginals  we appeal to the notion of   network polynomial  Darwiche    while lifting it to factors 

De nition   The polynomial of factor       is de ned as 

 cid 

 

 cid 

   

     

   

where       means that the value   of variable       is
compatible with instantiation   of variables   

The polynomial of factor          in Figure     is      
                The polynomial of factor      
corresponds to the simplest circuit that computes the factor
marginals  It is   twolevel circuit though  which has an
exponential size  The interest  however  is in deeper circuits that may not be exponentially sized  We later discuss
circuit properties that allows us to achieve this  sometimes 
One can construct an arithmetic circuit that computes the
distribution of   Bayesian network or the partition function
of   Markov network in time and space that are linear in
the size of these models  Each of these models correspond
to   set of factors            fn  with the model representing
the product of these factors  We can construct   circuit that
computes each factor as given in De nition   then simply
combine these circuits using   multiplication node  The result will compute the factor              fn but it will not
necessarily compute its marginals  We next show that if we
enforce the properties of decomposability and smoothness
on such   circuit  while maintaining its ability to compute
the factor    the resulting circuit will also compute the factor marginals  Therefore  these two properties turn the circuit into   tractable representation of the factor  allowing
one to compute marginals by simply evaluating the circuit
as in De nition    in time linear in the circuit size 

  Decomposability and Smoothness
The property of decomposability  Darwiche      was
used for tractable probabilistic reasoning in  Darwiche 
  by compiling Bayesian networks into arithmetic circuits that are guaranteed to be decomposable  This property
was also enforced by the algorithm proposed in  Lowd  
Domingos    for learning arithmetic circuits 

Figure   An AC that computes factor             from Figure  
where an absubcircuit  left  and an  absubcircuit  right  are highlighted  This circuit is deterministic  decomposable and smooth 

De nition    Decomposability  Let   be   node in an
arithmetic circuit AC    The variables of    denoted
vars    are all variables       with some indicator
   appearing at or under node    An arithmetic circuit
is decomposable iff every pair of children    and    of  
 node satis es vars      vars       
The property of smoothness  Darwiche      was also
used for probabilistic reasoning in  Darwiche    by
compiling circuits that are smooth 
It was also enforced
by the learning algorithm of  Lowd   Domingos   
This property was later called completeness in the works
on SPNs  initially in  Poon   Domingos   
De nition    Smoothness  An arithmetic circuit AC   
is smooth iff   it contains at least one indicator for each
variable in    and   for every child   of  node    we
have vars      vars   

Consider   factor       where variable   is binary and
                    circuit that consists of the single
parameter   will compute this factor but is not smooth  The
circuit         computes this factor and is smooth 
Consider   variable   with values            xm  Multiplying   circuit node by          xm preserves the circuit  
ability to compute   given factor since                xm    
under any circuit input that is relevant to this computation 
One can use this technique to ensure the smoothness of
any circuit  while incurring only   polynomial overhead 
Hence  contrary to decomposability and determinism  enforcing smoothness is not dif cult computationally  yet it
is necessary for an arithmetic circuit to compute marginals
as we discuss later  We also state the following observation 
used extensively in inductive proofs that we utilize later 

Lemma   Consider   decomposable and smooth arithmetic circuit AC    and de ne Xn   vars    for each
circuit node    Each arithmetic circuit AC Xn  rooted at
node   is also decomposable and smooth 

 Darwiche      shows how to smooth an NNF circuit in
  mn  space and time  where   is the size of the circuit and  
is the number of variables  the method can be adapted to ACs 

                 On Relaxing Determinism in Arithmetic Circuits

  main insight in this paper is the use of subcircuits   rst
introduced in  Chan   Darwiche    for   different purpose  They were also adopted in  Dennis   Ventura   
Zhao et al    to motivate SPN learning algorithms 

De nition    Subcircuits    complete subcircuit   of an
arithmetic circuit is obtained by traversing the circuit topdown  while choosing one child of each visited  node and
all children of each visited  node  The term of   is the
set of values   for which indicator    appears in   The
coef cient of   is the product of all parameters in  

The circuit        computes factor       with
          and           It is decomposable  smooth and
has three complete subcircuits  with             and      
as their term coef cient pairs  Note that two subcircuits
may have the same term but different coef cients 
The following lemma and its proof reveal the precise roles
of decomposability and smoothness  Given decomposability  the term of   complete subcircuit will not contain con 
 icting values for any variable  Given smoothness  the term
must contain   value for each variable 

Lemma   Let   be   complete subcircuit of an arithmetic
circuit AC    that is decomposable and smooth  The term
of subcircuit   must be an instantiation of variables   

Proof Given smoothness  every variable       must
have at least one indicator    in    no variables are dropped
from the circuit if we keep only   single child of    node 
Given decomposability  each variable       must have at
most one indicator    in   Hence    will contain exactly
one indicator for each variable        The term of   is
 cid 
therefore an instantiation   of variable   

  complete subcircuit with term   will be called an
xsubcircuit  Figure   depicts an absubcircuit  in red  and
an  absubcircuit  in blue 
In   decomposable and smooth circuit AC    every complete subcircuit is an xsubcircuit for some instantiation  
of variables    The circuit can then be treated as   collection of xsubcircuits  multiple subcircuits can have the
same term  Our proofs utilize this implication heavily 

De nition   An input   for arithmetic circuit AC    assigns   value in     to each circuit indicator     An instantiation   is compatible with   circuit input   denoted
      iff the input sets        when   sets       
  circuit input can be viewed as the set of instantiations
compatible with it  Consider the binary variables    
          for an example  The circuit input
                                             

has   single compatible instantiation abc  The input

                                             
has no compatible instantiations  and the circuit input 

                                             
has two compatible instantiations abc and  abc  In this latter
case  evaluating the circuit at instantiation bc  as discussed
in De nition   leads to evaluating it under input  
The following lemma brings us one step away from showing why decomposability and smoothness force an AC that
computes   factor to also compute the factor marginals 

Lemma   Given   decomposable and smooth arithmetic
circuit  let              be the coef cients of complete subcircuits whose terms are compatible with circuit input  
The circuit will evaluate to                under input  

Proof Given Lemma   we will use induction on the circuit structure  The base case is   leaf circuit node  indicator or parameter  The lemma holds trivially in this case 
The inductive case is when   is an internal circuit node
with children            ck  Suppose the lemma hold for these
children  If   is    node  the lemma holds for   by decomposability  the complete subcircuits of   correspond to the
Cartesian product of complete subcircuits for its children 
If   is    node  the lemma holds for   since the complete
subcircuits of   correspond to the union of complete sub 
 cid 
circuits of its children 

Corollary   Let              be the coef cients of xsubcircuits in   decomposable and smooth arithmetic circuit AC    We then have AC                     
We are now ready for the key result we are after 
Theorem   Consider an arithmetic circuit AC    that
computes factor       If the circuit is decomposable and
smooth  then it also computes the marginals of factor      
Proof Consider an instantiation   of some variables    
   let            xm be all instantiations of variables   that
are compatible with    and let   be the circuit input corresponding to these instantiations  Let    be the sum of coef 
cients of all xisubcircuits  Since the circuit computes factor       we have AC xi       xi  and  hence     xi      
by Corollary   By Lemma   the circuit evaluates to
       under input   which is             xm   
      Hence  the circuit computes the factor marginals   cid 

This theorem justi es the standard algorithm for computing
marginals on arithmetic circuits  in linear time  as proposed
in  Darwiche   that is  by simply evaluating the circuit as in De nition   In that work  however  the property

On Relaxing Determinism in Arithmetic Circuits

of determinism was also assumed  discussed in the next
section  Determinism is not necessary though for computing marginals as initially observed in  Poon   Domingos 
  Our proof above uses different tools than those
used in  Poon   Domingos    and is set in   more general context  Moreover  these tools and associated lemmas
turn out to be essential for the rest of our treatment on the
role of determinism  which we discuss in the next section 
As for the necessity of smoothness  consider the circuits
AC                   and AC               
           Both circuits are decomposable and compute
the same factor                                          and
              However  circuit AC  is not smooth while
AC  is smooth  Only AC  is guaranteed to compute factor
marginals by Theorem   For example  evaluating AC  at
instantiation    gives AC                     cid           
according to De nition   while AC           
Before we discuss determinism  we note that decomposability and determinism were exploited recently in
tractable  propositional reasoning within   semiring setting  initially in  Kimmig et al      then followed
by  Friesen   Domingos   

  Determinism
The property of determinism  Darwiche      was employed for probabilistic reasoning in  Darwiche    by
compiling Bayesian networks into arithmetic circuits that
are deterministic  It was also enforced by the algorithm of
 Lowd   Domingos    for learning arithmetic circuits 
The property was later called selectivity in the works on
SPNs  initially in  Peharz et al   
Using the terminology of our current formulation  the original de nition of determinism would amount to this  An
arithmetic circuit is deterministic iff the terms of each two
of its complete subcircuits are con icting  We will adopt
  weaker de nition  which allows con icting subcircuits as
long as at most one of them has   nonzero coef cient 
De nition    Determinism  An arithmetic circuit AC   
is deterministic iff each  node has at most one nonzero
input when the circuit is evaluated under any instantiation
  of variables   

 Poon   Domingos    introduced sumproduct networks
 SPNs  which are equivalent to decomposable and smooth ACs 
More precisely  each can be converted into the other in linear time
and space  Rooshenas   Lowd    The conversion is straightforward and amounts to adjusting for graphical notation 

 Theorem   of  Friesen   Domingos    implies that factor
marginals can be computed in time linear in the size of an arithmetic circuit  when the circuit is decomposable but not smooth 
This complexity is not justi ed  but assumed  in the proof of the
theorem  In fact  we are unaware of any justi ed algorithm that
attains this complexity without smoothness  see also Footnote  

As mentioned earlier  the original proposal for using arithmetic circuits as   tractable representation of probability
distributions  Darwiche    ensured that these circuits
are deterministic  in addition to being decomposable and
smooth  Moreover  several methods were proposed in  Darwiche    for compiling Bayesian networks into ACs
with these properties  One of these methods ensures that
the size of the AC is proportional to the size of   jointree for
the network  Another method yields circuits that can sometimes be exponentially smaller  and is implemented in the
publicly available ace system  Chavira   Darwiche   
see also  Darwiche et al    for an empirical evaluation
of this system in one of the UAI inference evaluations 
While determinism is not needed to compute factor
marginals  it is needed for the correctness of the lineartime
MPE algorithm of  Chan   Darwiche    This was
missed in some earlier works  Poon   Domingos   
which used this algorithm on nondeterministic ACs      
SPNs  without realizing that it is no longer correct  This
oversight was noticed in later works  Peharz et al   
Mau     de Campos    We next reveal the reason
why computing MPE without determinism is hard  Later in
the section  we reveal the reason why the MPE algorithm
of  Chan   Darwiche    fails without determinism 
The key observation is this  Consider variables   which
are partitioned into   and    Given   decomposable
and smooth arithmetic circuit AC    that computes factor
      one can obtain in linear time   decomposable and
       
This is achieved by simply setting all indicators    to   see
 Darwiche      for the root of this observation  MoreZ       is   MAP for
the original factor       Hence    polytime MPE algorithm implies   polytime MAP algorithm on decomposable
and smooth ACs  We know  however  that Naive Bayes
networks have linearsize decomposable and smooth ACs 
while MAP is hard on these networks  de Campos   
Therefore  the existence of   polytime MPE algorithm on
such circuits will contradict standard complexity assumptions  These observations can be abstracted into the following lemma  which succinctly and intuitively explains why
MPE is not tractable on decomposable and smooth circuits 

smooth AC    that computes the projection  cid 
over  an MPE for the projection cid 

Lemma     circuit representation that supports projection
and MPE in polytime also supports MAP in polytime 

Note that deterministic  decomposable and smooth ACs do
not support projection in polytime so the above argument

 Peharz et al    proposed   polytime algorithm that converts an SPN into one that is deterministic and smooth  called an
augmented SPN  but this new SPN computes   different factor
than the one computed by the original SPN  Hence  its MPEs cannot be generally converted into MPEs of the original SPN 

On Relaxing Determinism in Arithmetic Circuits

does not apply in this case  setting indicators    to   will
generally destroy determinism 
More formally  let AC    be   decomposable and smooth
arithmetic circuit that computes   factor       For   given
value    consider the decision problems 

Is there an instantiation   where

  DMPE AC 
AC        
 cid 
  DMAP AC 
Is there an instantiation   where
  AC               is partitioned into   and   
We now have the following result  whose proof expands
the one given in  Peharz et al    for SPNs based on the
above observations  see also  Mau     de Campos   
for an indepth discussion of MPE hardness on SPNs 

Theorem   The problem DMPE AC is NPcomplete 

Proof Given instantiation   and value    we can test
whether           by evaluating the circuit AC in time linear in the size of the circuit  Hence  the problem is in NP 
To show NPhardness  we reduce the  decision  problem of
computing  partial  MAP in   naive Bayes network  which
is NPcomplete  de Campos    to MPE in   decomposable and smooth arithmetic circuit  Suppose we have  
naive Bayes network with   root node    and leaf nodes
   and inducing   distribution Pr        We can compile this network into   polysize decomposable  deterministic and smooth arithmetic circuit AC       that computes Pr             as in  Chavira   Darwiche   
We can sumout variable    in the circuit AC       by
setting the indicators of    to one  The resulting circuit
AC    is decomposable and smooth  and computes the
Pr        For   given value
   there exists an instantiation   where AC        iff
Pr            
which is an NPcomplete problem  de Campos     cid 

 marginals of  factor cid 
there exists an instantiation   where cid 

  

  

Corollary   The problem DMAP AC is NPcomplete 

The following lemma reveals the precise role of determinism  which stands behind the correctness of the lineartime
MPE algorithm of  Chan   Darwiche    It basically
shows   oneto one correspondence between the nonzero
rows of the factor computed by   circuit and the complete
subcircuits with nonzero coef cients 
Lemma   Consider an arithmetic circuit AC    that
computes factor       and is deterministic  decomposable
and smooth  hence  can be viewed as   collection of xsubcircuits  For each instantiation    we have 

    If the circuit has two distinct xsubcircuits  one of

them must have   zero coef cient 

    If           the circuit contains   unique xsubcircuit

with coef cient      

Proof To prove     suppose the circuit contains two distinct xsubcircuits   and   that have nonzero coef 
cients  We will now establish   contradiction  Since  
and   are distinct  each    must include   distinct child
ci of some  node in the circuit  If we evaluate the circuit
at instantiation    both    and    will have nonzero values  Hence  the circuit cannot be deterministic  which is
  contradiction  To prove     suppose           and let
             be all xsubcircuits  At most one    can have
  nonzero coef cient by     Since the circuit computes
the factor  it must evaluate to       under instantiation   
 cid 
Hence  exactly one    has       as its coef cient 

Lemma   allows us to prove the correctness of the MPE algorithm given by  Chan   Darwiche    under the more
general setting we have in this paper  This original algorithm is based on converting   deterministic  decomposable
and smooth AC that computes   distribution Pr     into  
maximizer circuit  Evaluating this circuit under evidence   
as in De nition   gives the MPE value argmaxx   Pr    
An arithmetic circuit AC    is converted into   maximizer
circuit  denoted ACmax    by replacing every  node
with   maxnode  The complete subcircuits of ACmax are
de ned as in De nition   but where exactly one child of
each visited maxnode is selected 
Theorem   Let AC    be   deterministic  decomposable and smooth arithmetic circuit that computes   factor
      and let ACmax    be its maximizer circuit  Then
ACmax      maxx         for       
Proof By Lemma  
there is   oneto one correspondence between the nonzero rows of factor       and xsubcircuits with nonzero coef cients  Let              be
the coef cients of xsubcircuits  where   is compatible
with    Hence  max                maxx         That
is  the MPE value is   coef cient of some xsubcircuit 
call it an MPEsubcircuit  We will think of the algorithm as
composing an MPEsubcircuit in addition to computing its
coef cient and show that ACmax      max             
by induction on the circuit structure  see Lemma   The
base case trivially holds for leaf circuit nodes  indicators
and parameters  Assume   is an internal circuit node and
the above equality holds for its children            ck having
If   is    node 
MPEsubcircuits    and coef cient    
then by decomposability  an MPEsubcircuit for   can be
found by joining              with                as its coef 
 cient  If   is   maxnode  then by determinism  an MPEsubcircuit for   can be found from the    with the largest
 cid 
   with maxk

      as its coef cient 

Once   maximizer circuit is evaluated to   one can identify

On Relaxing Determinism in Arithmetic Circuits

an xsubcircuit that has   as its coef cient  with   being an
MPE instantiation  see  Chan   Darwiche   
Without determinism    circuit may have multiple xsubcircuits for   given    each having   nonzero coef 
cient  By Corollary   the value of    AC            is
the sum of these coef cients  An MPE algorithm that does
not perform this sum cannot be correct 
Before we further discuss the impact of relaxing determinism  we point to   new class of arithmetic circuits  the Probabilistic Sentential Decision Diagram  PSDD   Kisa et al 
  which imposes stronger versions of decomposability and determinism  This enables the multiplication of two
ACs in polytime  which is otherwise hard under the standard versions of these properties  Shen et al   

  The Impact of Relaxing Determinism
We now consider two new implications of relaxing determinism  one positive and one negative  We also address an
apparent paradox  How could   representation  decomposable and smooth ACs  allow the computation of marginals
easily    PPcomplete problem  yet not allow the computation of MPE easily  an NPcomplete problem  Recall
that the complexity class NP is included in the class PP 
The positive implication is that relaxing determinism can
lead to exponentially smaller arithmetic circuits 

Theorem    Separation  There is   family of
factors
fn Xn  where   there exists   decomposable and smooth
arithmetic circuit ACn Xn  that computes the marginals
of fn  with   size polynomial in      every deterministic  decomposable and smooth circuit that computes the
marginals of factor fn must have   size exponential in   

Proof  Bova et al    identi es   family of Boolean
functions  the Sauerhoff functions  Sn that have decomposable NNFs  DNNFs  with sizes polynomial in    but where
their deterministic DNNFs  dDNNFs  must have sizes exponential in    Previously known separations were conditional on the polynomial hierarchy not collapsing  Darwiche   Marquis    but  Bova et al    does not
make such an assumption  and neither do we 

 Smoothness is not strictly needed for this algorithm  except

that it ensures that   full variable instantiation is returned 

 This MPE algorithm was used on selective SPNs  equivalent
to deterministic and decomposable ACs  in  Peharz et al   
It was also adapted to algebraic model counting  AMC  in  Kimmig et al    and to SumProduct Functions  SPFs  in  Friesen
  Domingos    Determinism was not required in  Kimmig
et al    This is sound since AMC problems correspond to
Boolean circuits where the weight of an instantiation is   product of literal weights  and is independent of how many times the
instantiation appears as   subcircuit 

Let gn denote   polysize DNNF for function Sn and let
ACn denote the polysize decomposable and smooth arithmetic circuit obtained by  replacing the inputs of gn with
the corresponding indicator variables  replacing conjunctions and disjunctions by products and sums  respectively 
then smoothing if necessary  The resulting arithmetic circuit ACn has   positive value  possibly     on input   iff
the original function Sn evaluates to true  We now show
that if fn is the factor computed by arithmetic circuit ACn 
then any deterministic  decomposable and smooth AC that
computes fn must have an exponential size 
  obLet AC
tained by  replacing the indicator variables with the corresponding literals of variables    replacing products and
sums with conjunctions and disjunctions  respectively  and
by replacing positive parameters with true and zero param 
 cid 
eters with false  Note that   cid 
        
       complete subcircuit for   cid 
  evaluates to true iff the
 cid 
  has   positive coef cient 
corresponding subcircuit for AC
 cid 
  had   subexponential size  then function Sn
Hence  if AC
would have   subexponentially sized dDNNF  which we
 cid 
know does not exist  Bova et al   

 cid 
  be such   circuit  Consider the dDNNF   cid 

     is true iff AC

We now get to   newly identi ed  negative implication of
relaxing determinism  It pertains to compiling ACs from
probabilistic models and requires the following notion 

De nition     set of parameters   is complete for factor
      iff for every instantiation    the parameter       can
be expressed as   product of parameters in  

The parameters of   Bayesian network are complete for its
distribution  those of   Markov network are complete for
its partition function  and the parameters         are
complete for Boolean factors        with            
We will write AC      to denote an arithmetic circuit
whose parameters are in   The following theorem states  
key property which is lost when relaxing determinism 

Theorem    Completeness  Consider factor       and
complete parameters   There must exist an arithmetic circuit AC      that computes the factor marginals and is
deterministic  decomposable and smooth 

Proof Consider the factor polynomial cid 

      
in De nition   and replace each       by   product of parameters from   The result can be represented by an AC
 cid 
that is deterministic  decomposable and smooth 

       cid 

The standard methods for compiling Bayesian networks 
and graphical models more generally  into arithmetic circuits do indeed limit the circuit parameters to those appearing in the model factors  Hence  the compilation process
amounts only to  nding    small  circuit structure since

On Relaxing Determinism in Arithmetic Circuits

the circuit parameters are already predetermined  As mentioned earlier  these methods can yield relatively small circuits for some graphical models with very high treewidth
 Chavira   Darwiche    Darwiche et al   
The above property is lost if one insists on constructing
arithmetic circuits that are decomposable and smooth  but
not deterministic  This is shown in the following theorem 
which refers to dead circuit nodes  ones that appear only in
complete subcircuits that have zero coef cients 

Theorem    Parametric Incompleteness  Let       be  
Boolean factor and           is complete for     
circuit AC      cannot compute       if it is decomposable  smooth and free of dead nodes  but not deterministic 

Proof If the AC has no  node  then it is vacuously deterministic  Otherwise  it has    node  Since the circuit is
not deterministic  there is    node   that violates determinism  This node is included in some complete subcircuit
with   nonzero coef cient  otherwise  the node   is dead 
Since node   violates determinism  we can  nd two distinct
xsubcircuits  with nonzero coef cients  that differ by the
branch selected at node    Since the circuit computes factor       Lemma   implies that the coef cients of these
xsubcircuits must add up to           There must then
exist an xsubcircuit whose coef cient is in     exclu 
 cid 
sive       the circuit has   parameter not in    
In other words 
if   decomposable and smooth circuit
AC      computes the marginals of   Boolean factor  it must also be nontrivially deterministic  This result
has   major implication on compiling probabilistic graphical models into ACs that are not deterministic  That is 
one cannot generally restrict the circuit parameters to those
appearing in the model  otherwise   circuit may not exist 
Therefore  while relaxing determinism can lead to exponentially smaller circuits   nding these circuits is now more
involved as it may require searching for parameters  This
demands new techniques as all techniques we are aware
of for compiling models into deterministic circuits assume
that the circuit parameters come from model parameters 
last contribution relates to the following apparOur
ent paradox 
factors
             fn Xn  representing   probabilistic graphical model that has   corresponding joint factor    
     fn  Consider now the following decision problems 
over such probabilistic graphical models  which correspond
to computing the MPE and marginals 

Suppose we have   set of

 Dead nodes can be replaced by the constant zero without
changing the factor computed by the circuit  One can relax determinism trivially by adding dead nodes  but that does not help
as far as obtaining smaller circuits 

  DMPE  Is there an instantiation   where           

  DPR  Is cid 

            

DMPE is NPcomplete  whereas DPR is PPcomplete 
Moreover 
the complexity class PP includes NP  Yet 
decomposable and smooth ACs allow one to compute
marginals in linear time  while computing MPE  which is
no harder  is hard on these circuits 
To resolve this apparent paradox  one must observe the
sometimes subtle distinction between   representation and
the computation needed to produce that representation  The
representation here is decomposable and smooth ACs  and
the computation is the algorithm used to compile   graphical model into this representation  While the representation
itself does not facilitate the computation of MPE  the compilation algorithm must be suf cient to compute the MPE
query without additional complexity  beyond polynomial 
To formalize this  we need the following lemma 

Lemma   DMPE can be reduced to DPR 

We now have the following result  which implies that
  polytime compilation algorithm for decomposable and
smooth ACs can be used as   subroutine for   polytime
algorithm for computing MPEs  which we do not expect to
exist  under typical complexity theoretic assumptions 

Theorem   Consider an algorithm   that takes   set of
factors              fn Xn  as input and returns   decomposable and smooth arithmetic circuit that computes the
marginals of factor          fn  Let   be the size of
input factors and let        be the time complexity of algorithm   One can compute the MPE of factor   in time
    poly   

These  ndings highlight an interesting property of decomposable and smooth ACs  They  store  the results to an
exponential number of marginal queries  where each result can be retrieved by   simple traversal of the circuit 
Yet  they do not  store  the answers to MPE queries  even
though these queries are easier  The implication of this can
be seen from two angles  depending on whether these circuits are compiled from models or learned from data  In the
former case  the compilation algorithm is readily available
to answer MPE queries  but at the cost of invoking this algorithm for each query  In the latter case  however  answering MPE queries remains   challenge  Hence  learning circuits that are not deterministic needs to yield an additional
bene   that compensates for this loss in tractability  This
could be   simpler learning algorithm    smaller learned
circuit  or   learned circuit whose factor is superior from  
statistical learning viewpoint 

On Relaxing Determinism in Arithmetic Circuits

Kimmig  Angelika  Van den Broeck  Guy  and De Raedt  Luc 
International Journal of Applied

Algebraic model counting 
Logic  November  

Kisa  Doga  Van den Broeck  Guy  Choi  Arthur  and Darwiche 
In KR 

Adnan  Probabilistic sentential decision diagrams 
 

Lowd  Daniel and Domingos  Pedro    Learning arithmetic circuits  In Proceedings of the  th Conference in Uncertainty in
Arti cial Intelligence  UAI  pp     

Mau    Denis Deratani and de Campos  Cassio Polpo  Approximation complexity of maximum   posteriori inference in sumproduct networks  CoRR  abs   

Park  James    and Darwiche  Adnan  Complexity results and
approximation strategies for MAP explanations     Artif  Intell 
Res   JAIR     

Peharz  Robert  Gens  Robert  and Domingos  Pedro    Learning

selective sumproduct networks  In LTPM workshop   

Peharz  Robert  Gens  Robert  Pernkopf  Franz  and Domingos 
Pedro  On the latent variable interpretation in sumproduct networks  IEEE Transactions on Pattern Analysis and Machine
Intelligence  TPAMI   

Poon  Hoifung and Domingos  Pedro    Sumproduct networks 

  new deep architecture  In UAI  pp     

Rooshenas  Amirmohammad and Lowd  Daniel  Learning sumproduct networks with direct and indirect variable interactions 
In ICML  pp     

Roth  Dan  On the hardness of approximate reasoning  Artif 

Intell     

Shen  Yujia  Choi  Arthur  and Darwiche  Adnan  Tractable operations for arithmetic circuits of probabilistic models  In Advances in Neural Information Processing Systems    NIPS 
 

Shimony  Solomon Eyal  Finding MAPs for belief networks is

NPhard  Artif  Intell     

Zhao  Han  Poupart  Pascal  and Gordon  Geoffrey      uni 
 ed approach for learning the parameters of sumproduct networks  In Advances in Neural Information Processing Systems
   NIPS  pp     

Acknowledgements
This work has been partially supported by NSF grant  IIS 
  ONR grant     and DARPA
XAI grant     We thank YooJung Choi 
Umut Oztok  Yujia Shen  and Guy Van den Broeck for
comments and discussions on this paper 

References
Bova  Simone  Capelli  Florent  Mengel  Stefan  and Slivovsky 
Friedrich  Knowledge compilation meets communication complexity  In Proceedings of the TwentyFifth International Joint
Conference on Arti cial Intelligence  IJCAI  pp   
 

Chan  Hei and Darwiche  Adnan  On the robustness of most probable explanations  In Proceedings of the  nd Conference in
Uncertainty in Arti cial Intelligence  UAI   

Chavira  Mark and Darwiche  Adnan  On probabilistic inference
by weighted model counting  Arti cial Intelligence   
  April  

Darwiche  Adnan  On the tractable counting of theory models and
its application to truth maintenance and belief revision  Journal
of Applied NonClassical Logics       

Darwiche  Adnan  Decomposable negation normal form  Journal

of the ACM       

Darwiche  Adnan    logical approach to factoring belief net 

works  In Proceedings of KR  pp     

Darwiche  Adnan    differential approach to inference in

Bayesian networks     ACM     

Darwiche  Adnan  Modeling and Reasoning with Bayesian Net 

works  Cambridge University Press   

Darwiche  Adnan and Marquis  Pierre    knowledge compilation

map  JAIR     

Darwiche  Adnan  Dechter  Rina  Choi  Arthur  Gogate  Vibhav 
and Otten  Lars  Results from the probabilistic inference evaluation of UAI   

de Campos  Cassio Polpo  New complexity results for MAP in
Bayesian networks  In Proceedings of the  nd International
Joint Conference on Arti cial Intelligence  IJCAI  pp   
   

Dennis  Aaron    and Ventura  Dan  Greedy structure search for
In Proceedings of the TwentyFourth
sumproduct networks 
International Joint Conference on Arti cial Intelligence  IJCAI  pp     

Friesen  Abram    and Domingos  Pedro    The sumproduct
theorem    foundation for learning tractable models  In Proceedings of the  nd International Conference on Machine
Learning  ICML  pp     

Kimmig  Angelika  Van den Broeck  Guy  and De Raedt  Luc 
Algebraic model counting  CoRR  abs    URL
http arxiv org abs 

